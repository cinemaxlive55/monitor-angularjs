@Library('nextgen-jenkins-libraries@3.1.0') _

def  utils = new au.gov.nextgen.JenkinsUtils()
def appName = 'moniter-dashboard-backend'
def appVersion = '0.0.1'
def clusterNonProd
def dockerRepository
def clusterProd
def isPR

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '10')), pipelineTriggers([])])

node'',{
  stage "Preparation", {
    cleanWs()
    checkout scm
    clusterNonProd = utils.getNonProdClusterName()
    clusterProd = utils.getProdClusterName()
    dockerRepository = 'nextgen'
    isPR = (!utils.isCI() && !utils.isCD())
  }

  stage "Build Docker Image", {
    sh "docker build -t ${appName}:${appVersion} ."
  }

  stage "Helm Dry Run", {
    helmUpgrade clusterNonProd, {
      dryRun = true
      namespace = 'ci'
      artifactName = appName
      includeIngress = true
      blueGreenEnabled = true
    }
  }

  stage "Push" ,{
    dockerPushImage clusterNonProd, {
      imageName = appName
      imageVersion = appVersion
      dockerRepo = dockerRepository
    }
  }

      if (isPR) {
          stage "Deploy CI", {
              previousVersion = helmUpgrade clusterNonProd, {
                  namespace = 'ci'
                  artifactName = appName
                  artifactVersion = appVersion
                  includeIngress = true
                  blueGreenEnabled = false
              }
          }
      } else {
          stage "Deploy QA", {
              previousVersion = helmUpgrade clusterNonProd, {
                  namespace = 'qa'
                  artifactName = appName
                  artifactVersion = appVersion
                  includeIngress = true
                  blueGreenEnabled = true
                  helmSetArguments = 'container.replicas.min=1,container.replicas.max=1'
              }
          }
      }
}

node'', {
    if(!isPR){
        stage "Integration Tests", {
        }
    }

    if (utils.isCD()) {
        stage "Deploy PROD", {
            previousVersion = helmUpgrade clusterProd, {
                namespace = 'prod'
                artifactName = appName
                artifactVersion = appVersion
                includeIngress = true
                blueGreenEnabled = true
                helmSetArguments = 'container.replicas.min=1,container.replicas.max=1'
            }
        }
    }
}